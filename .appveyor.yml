image:
- Visual Studio 2017
- Ubuntu

install:
- sh: pwd
- ps: |
    if ($isWindows) {
          vcpkg install gtest:x64-Windows
        } else {
          git clone https://github.com/Microsoft/vcpkg.git /home/appveyor/projects/vcpkg
          cd /home/appveyor/projects/vcpkg
        }
- sh: sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && sudo apt-get update -y && sudo apt-get install g++-7 -y && sudo apt-get install make -y
- sh: ./bootstrap-vcpkg.sh && ./vcpkg install gtest && cd /home/appveyor/projects/shiva

build_script:
  - sh: pwd
  - mkdir build
  - cd build
  - ps: |
      if ($isWindows) {
            cmake -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release -DSHIVA_BUILD_TESTS=ON -DSHIVA_BUILD_EXAMPLES=ON -G "Visual Studio 15 2017 Win64" ..
            cmake --build . --config Release -- /verbosity:minimal /maxcpucount:3
          } else {
            cmake -DCMAKE_TOOLCHAIN_FILE="/home/appveyor/projects/vcpkg/scripts/buildsystems/vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release -DSHIVA_BUILD_TESTS=ON -DSHIVA_BUILD_EXAMPLES=ON ..
            cmake --build . --config Release
          }

test_script:
- ctest --no-compress-output -T Test -C Release
- cd ../bin
- ps: |
    if ($isWindows) {
      foreach ($file in get-ChildItem *-test.exe)
      {
        $var = $file.name
        echo $var
        & ./$var --gtest_output="xml:$var-release-result.xml"
      }
    }
- sh: |
    for i in *-test; do
    	./$i --gtest_output="xml:${i}-release-result.xml" || exit 1
    done
- cd ..
- mkdir test-result
- cd test-result
- mkdir ctest
- cd ..
- cp bin/*.xml test-result/
- cp build/Testing/*/*.xml test-result/ctest

on_finish:
  - cd test-result/ctest
  - ps: |
      $XSLInputElement = New-Object System.Xml.Xsl.XslCompiledTransform
      $XSLInputElement.Load("https://raw.githubusercontent.com/rpavlik/jenkins-ctest-plugin/master/ctest-to-junit.xsl")
      $XSLInputElement.Transform((Resolve-Path .\Test.xml), (Join-Path (Resolve-Path .) "ctest-to-junit-results.xml"))
      $wc = New-Object 'System.Net.WebClient'
      $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\ctest-to-junit-results.xml))
  - echo "finish"