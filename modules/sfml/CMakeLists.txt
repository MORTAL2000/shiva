set(CMAKE_POSITION_INDEPENDENT_CODE ON)
macro(mini_module module_name additional_library)
    include(shiva/sfml/${module_name}/CMakeSources.cmake)
    set(MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})
    CREATE_MODULE_PLUGIN(shiva::system-sfml-${module_name} "${MODULE_SOURCES}" ${MODULE_PATH} "systems" "sfml/shiva")
    target_link_libraries(system-sfml-${module_name} PUBLIC shiva::ecs shiva::sfml-components PUBLIC ${additional_library})
    AUTO_TARGETS_PLUGINS_INSTALL(system-sfml-${module_name} shiva-sfml)
endmacro()

if (SHIVA_USE_SFML_AS_RENDERER)
    include(shiva/sfml/components/CMakeSources.cmake)
    set(MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})
    CREATE_MODULE(shiva::sfml-components "${MODULE_SOURCES}" ${MODULE_PATH})
    target_link_libraries(sfml-components INTERFACE shiva::reflection)

    AUTO_TARGETS_MODULE_INSTALL(sfml-event)
    find_package(SFML CONFIG REQUIRED system window graphics audio)
    mini_module(graphics sfml-graphics)
    mini_module(inputs sfml-graphics)
    PREPARE_MODULE_INSTALLATION(shiva-sfml)
endif ()
